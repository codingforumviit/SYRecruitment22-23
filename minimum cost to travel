#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int rec(int i, vector<int>& cost, vector<int>& dp)
{
       int n=cost.size();
    
        if(i>=n)
        {
            return 1e9;
        }
    
        if(i==n-1)
        {
            return 0;
        }
    
        if(dp[i]!=-1)
        {
            return dp[i];
        }
             
        int onestep = cost[i]+rec(i+1,cost,dp);
        int twostep = cost[i]+rec(i+2,cost,dp);
    
        return dp[i]=min(onestep,twostep);
    
        
}


int main() 
{
    int n;
    cin>>n;
    
    vector<int> v(n);
    
    
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }

    vector<int> dp(n,-1);
    
    
    int ans=rec(0,v,dp);
    
    cout<<ans<<endl;
    
     return 0;
    
}
